#Relation Algebra


#Database
"employee
Fname string
Minit string
Lname string
Ssn number
Bdate date
Address string
Sex string
Salary number
Super_ssn number
Dno number

department
Dname string
Dnumber number
Mgr_ssn number
Mgr_start_date date

dependent
Essn number
Dependent_name string
Sex string
Bdate date
Relationship string

dept_location
Dnumber number
Dlocation string

project
Pname string
Pnumber number
Plocation string
Dnum number

works_on
Essn number
Pno number
Hours number"
##################



# a) Obtenha uma lista contendo os projetos e funcionários (ssn e nome completo) que lá trabalham;


(πPname, Pnumber (project) ⨝
	Pnumber=Pno works_on) ⨝
	Essn=Ssn (πFname, Lname, Ssn (employee))

# b) Obtenha o nome de todos os funcionários supervisionados por ‘Carlos D Gomes’;

π Fname,Minit,Lname, employee.Ssn (employee ⨝
		employee.Super_ssn=supGomes.Ssn ρ supGomes π Ssn σ (Fname='Carlos' ∧ Minit='D' ∧ Lname='Gomes') (employee))

# f) Para cada departamento, listar o seu nome e o salário médio dos seus funcionários do sexo feminino;
# Dname, Dnumber comes from department, from employee we get salary ,the Ssn and sex

π Dname,Fname, Lname, Salary (department ⨝ Dnumber = Dno (σ Sex='F' (employee)))

# h) Obtenha uma lista de todos os funcionários gestores de departamento que não têm dependentes;

π Fname, Minit, Lname (employee - (employee ⨝ Ssn=Essn dependent) ⨝ Ssn=Mgr_ssn department)

# i)

π e.Fname, e.Lname, totalDepend (
    σ totalDepend = 0 (
        ((ρ e employee) ⨝ e.Ssn = d.Mgr_ssn ρ d department) 
        ⨝ e.Ssn = e2.Essn (π e2.Ssn (ρ e2 employee) - π e3.Essn (employee ⨝ e2.Ssn = e3.Essn (ρ e3 dependent)))
    )
)


# 5.2
; tipo_fornecedor
; codigo number
; designacao string

; fornecedor
; nif number
; nome string
; fax number
; endereco string
; condpag number
; tipo number

; produto
; codigo number
; nome string
; preco number
; iva number
; unidades number

; encomenda
; numero number
; data date
; fornecedor number

; item
; numEnc number
; codProd number
; unidades number

# Número médio de unidades encomendadas para cada produto;

π  numero, AvgUnidades (encomenda ⨝ numero = numEnc (γ numEnc; avg(unidades) -> AvgUnidades (item)))